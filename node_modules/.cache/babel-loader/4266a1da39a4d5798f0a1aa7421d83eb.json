{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\ExpensesViewer\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  // useState permet de rafraichir l'affichage d'une variable donnée en param\n  // Il retourne une array deux élement (la variable et une fonction setter)\n  // On peeut ensuite appeler ce setter pour modifier la variable à laquelle il est lié\n  // const [title, setTitle] = useState(props.title);\n  // const clickHandler = () => {\n  // \tsetTitle('Pain de mie')\n  // }\n  // <button onClick={clickHandler}>Change Title</button>\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"props.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [props.amount, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["D:/ReactCourse/ExpensesViewer/src/components/Expenses/ExpenseItem.js"],"names":["useState","ExpenseDate","Card","ExpenseItem","props","date","amount"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,mBAAP;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE9B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,mBAAsCD,KAAK,CAACE,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CArBD;;KAAMH,W;AAuBN,eAAeA,WAAf","sourcesContent":["import {useState} from 'react'\r\n\r\nimport ExpenseDate from './ExpenseDate'\r\nimport Card from '../UI/Card'\r\nimport './ExpenseItem.css'\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n\t\r\n\t// useState permet de rafraichir l'affichage d'une variable donnée en param\r\n\t// Il retourne une array deux élement (la variable et une fonction setter)\r\n\t// On peeut ensuite appeler ce setter pour modifier la variable à laquelle il est lié\r\n\t// const [title, setTitle] = useState(props.title);\r\n\r\n\t// const clickHandler = () => {\r\n\t// \tsetTitle('Pain de mie')\r\n\t// }\r\n\t// <button onClick={clickHandler}>Change Title</button>\r\n\r\n\treturn (\r\n\t\t<Card className=\"expense-item\">\r\n\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t<h2>props.title</h2>\r\n\t\t\t\t<div className=\"expense-item__price\">{props.amount}€</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default ExpenseItem"]},"metadata":{},"sourceType":"module"}